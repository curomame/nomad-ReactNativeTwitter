{"version":3,"sources":["fbase.js","routes/AuthForm.js","routes/Auth.js","components/Nweet.js","routes/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAcount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","event","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","id","urlRef","ref","attachmentUrl","onDeleteClick","window","confirm","deleteDoc","deleteObject","then","toggleEditing","console","log","updateDoc","src","width","height","alt","NweetFactroy","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","docRef","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","Profile","refreshUser","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","getDocs","forEach","updateProfile","currentUser","signOut","Navigation","to","AppRouter","isLoggedIn","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a025932.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\"\nimport { getStorage } from \"firebase/storage\";\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\n\n// export const firebaseInstance = firebase;\nexport const authService = getAuth(app);\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React,{useState} from \"react\";\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAcount] =useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (e) => {\n    const {target : {name, value}} = e;\n    if(name === \"email\"){\n      setEmail(value)\n    } else if(name === \"password\"){\n      setPassword(value)\n    }\n  }\n\n  \n  const onSubmit = async(e) => {\n    e.preventDefault();\n    //기본행위가 실행되는것을 막는다 (새로고침 진행안되도록)\n    try{\n      let data;\n      if(newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n        } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n        }\n    } catch (error) {\n      setError(error.message);\n    }\n    \n  }\n\nconst toggleAccount = () => setNewAcount((prev) => !prev);\n\n  \nreturn(\n  <>\n  <form onSubmit={onSubmit}>\n    <input onChange={onChange} name=\"email\" type=\"email\" placeholder=\"email\" required value={email}/>\n    <input onChange={onChange} name=\"password\" type=\"password\" placeholder=\"password\" required value={password}/>\n    <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n    {error}\n    <span onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\"}</span>\n  </form>\n  </>\n)\n\n}\n\nexport default AuthForm;","import React from \"react\"\nimport { authService } from \"../fbase\";\nimport { GithubAuthProvider, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport AuthForm from \"./AuthForm\";\n\nconst Auth = () => {\n\n\nconst onSocialClick = async (event) => {\n  const {\n  target: { name },\n  } = event;\n  let provider;\n  if (name === \"google\") {\n  provider = new GoogleAuthProvider();\n  } else if (name === \"github\") {\n\n\n  provider = new GithubAuthProvider();\n  }\n  await signInWithPopup(authService, provider);\n  };\n\nreturn(\n  \n<div>\n  <AuthForm />\n  <div>\n    <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n    <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n  </div>\n</div>\n)\n}\n\nexport default Auth;","import { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { deleteObject,ref } from \"firebase/storage\"\nimport { dbService, storageService } from \"../fbase\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n  \n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n\n  const NweetTextRef =doc(dbService, \"nweets\", `${nweetObj.id}`);\n  const urlRef = ref(storageService, nweetObj.attachmentUrl);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");  \n    if (ok){\n      await deleteDoc(NweetTextRef).then(await deleteObject(urlRef));\n      \n        } else {\n\n    }\n  }\n  \n  const toggleEditing = () => setEditing((prev)=> !prev)\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(nweetObj, newNweet);\n    await updateDoc(NweetTextRef,{\n      text: newNweet,\n    });\n    setEditing(false);\n  }\n\n  const onChange = (e) => {\n    const {target:{value}} = e;\n    setNewNweet(value);\n  } \n\n  return(\n\n    <div>\n\n    {editing ? \n    <>\n      { isOwner &&\n      <>\n      <form onSubmit={onSubmit}>\n      <input onChange={onChange} type=\"text\" placeholder=\"edit your nweet\" value={newNweet}required/>\n      <input type=\"submit\" value=\"updated\"></input>\n      </form>\n      \n    <button onClick={toggleEditing}>Change</button>\n    </>}\n    </> \n    : <h4>{nweetObj.text}</h4>}\n    {nweetObj.attachmentUrl && (<img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"alt\"/> )}\n\n      {isOwner &&  (\n      <>\n      <button onClick={onDeleteClick}>Delete Nweet</button>\n      <button onClick={toggleEditing}>Edit Nweet</button>\n      </>\n      )}\n    </div>\n\n)}\n\nexport default Nweet;\n\n","import React,{useState} from 'react'\nimport { dbService, storageService } from '../fbase';\nimport { addDoc } from 'firebase/firestore';\nimport { collection } from 'firebase/firestore';\nimport { getDownloadURL } from 'firebase/storage';\nimport { uploadString } from 'firebase/storage';\nimport { ref } from 'firebase/storage';\nimport {v4 as uuidv4} from \"uuid\"\n\n\nconst NweetFactroy = ({userObj}) => {\n\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n  \n    let attachmentUrl = \"\";\n  \n    if(attachment !== \"\") {\n      const attachmentRef = ref(storageService,`${userObj.uid}/${uuidv4()}`)\n      const response = await uploadString(attachmentRef, attachment, \"data_url\")\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n  \n    const nweetObj = {\n      text : nweet,\n      createdAt:Date.now(),\n      creatorId : userObj.uid,\n      attachmentUrl\n    }\n  \n      try {\n        const docRef = await addDoc(collection(dbService, \"nweets\"), nweetObj);\n        console.log(\"Document written with ID: \", docRef.id);\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n  \n      setNweet(\"\");\n      setAttachment(\"\")\n  \n  }\n  \n    const onChange = (event) => {\n      const { target : {value}} = event;\n      setNweet(value);\n    }\n  \n    const onFileChange = (e) => {\n      const {target : {files}} = e;\n      const theFile = files[0];\n      const reader = new FileReader();\n      reader.onloadend = (finishedEvent) => {\n        console.log(finishedEvent);\n        const {currentTarget: {result}} = finishedEvent;\n        setAttachment(result)\n      }\n      reader.readAsDataURL(theFile);\n    }\n  \n    const onClearAttachment =() => setAttachment(null);\n\n  return (\n\n    <form onSubmit={onSubmit}>\n        <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && <div>\n        <img src={attachment} width=\"50px\" height=\"50px\" alt=\"\"/>\n        <button onClick={onClearAttachment}>Clear Photo</button>\n        </div>}\n      </form>\n\n  )\n\n}\n\nexport default NweetFactroy","import React, { useEffect, useState } from \"react\"\nimport { dbService,} from \"../fbase\";\nimport Nweet from \"../components/Nweet\"\nimport { collection, onSnapshot, query,orderBy, } from \"firebase/firestore\";\nimport NweetFactroy from \"./NweetFactory\";\n\nconst Home = ({userObj}) => {\n  \n  const [nweets, setNweets] = useState([]);\n\n\n  useEffect( () => {\n    const q = query(\n      collection(dbService, \"nweets\"),\n      orderBy(\"createdAt\",\"desc\")\n    );\n      onSnapshot(q,(snapshot) => {\n      const nweetArray = snapshot.docs.map(doc => ({id : doc.id, ...doc.data(),}))\n      setNweets(nweetArray);\n    })\n    \n  },[])\n\n\n\n  return (\n    <div>\n      <NweetFactroy userObj={userObj}/>\n      <div>\n        {nweets.map((nweet) =>\n      (<Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/> )\n        )}\n      </div>\n    </div>\n);\n  }\nexport default Home;","import React, { useState, useEffect } from \"react\"\nimport { authService, dbService } from \"../fbase\"\nimport {useNavigate} from 'react-router-dom';\nimport { collection, getDocs, query, where, orderBy } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Profile = ({refreshUser, userObj}) => {\n  const navigate = useNavigate();\n  \n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    navigate(\"/\")\n\n  }\n\nconst getMyNweets = async() => {\n  const q = query(collection(dbService, \"nweets\"),orderBy(\"createdAt\", \"asc\") ,where(\"creatorId\", \"==\", userObj.uid));\n  const querySnapshot = await getDocs(q);\n  querySnapshot.forEach((doc) => {\n  console.log(doc.id, \" => \", doc.data());\n})\n\n}\n\n  useEffect(()=>{\n    getMyNweets();\n  },[])\n\n\nconst onSubmit = async (e) => {\n  \n  e.preventDefault();\n  if(userObj.displayName !== newDisplayName){\n    await updateProfile(authService.currentUser, { displayName: newDisplayName });\n    refreshUser();\n    }\n}\n\nconst onChange = (e) => {\n  const {\n    target : {value} \n  } = e;\n  setNewDisplayName(value);\n}\n\nreturn <>\n<form onSubmit={onSubmit}>\n  <input onChange ={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName}/>\n  <input type=\"submit\" value=\"Update Profile\"/>\n</form>\n<button onClick={onLogOutClick}>Log Out</button>\n</>\n}\n\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({userObj}) => <nav>\n  <ul>\n    <li>\n      <Link to=\"/\">Home</Link>\n    </li>\n    \n    <li>\n      <Link to=\"/profile\">{userObj.displayName}'s' Profile</Link>\n    </li>\n  </ul>\n</nav>\nexport default Navigation;","import React from \"react\"\n\nimport {HashRouter as Router, Route, Routes} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({refreshUser,isLoggedIn, userObj}) => {\n\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Routes>\n        {isLoggedIn ?  (\n        <>\n\n          <Route exact path=\"/\" element={<Home userObj={userObj} />}></Route>\n          <Route exact path=\"/profile\" element={<Profile userObj={userObj} refreshUser={refreshUser}/>}></Route>\n        </>\n        ) : (\n          <>\n        <Route exact path=\"/\" element={<Auth/>}>\n        </Route>\n        </>\n        )}\n      </Routes>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import React,{useEffect, useState}from \"react\"\nimport AppRouter from \"./Router\";\nimport {authService} from \"../fbase\"\nimport { updateProfile } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => updateProfile(user, { displayName: user.displayName }),\n          });\n      } else {\n        setUserObj(null)\n      } \n\n    setInit(true);\n    }\n    );\n  },[]);\n\n  \n  const refreshUser = () => {\n    const user = authService.currentUser;\n    console.log(authService.currentUser);\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => updateProfile(user, { displayName: user.displayName }),\n      });\n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}